package geektime.spring.springbucks.mapper;

import geektime.spring.springbucks.pojo.Order;
import geektime.spring.springbucks.pojo.OrderExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.session.RowBounds;
import org.springframework.cache.annotation.Cacheable;

import java.util.List;

@Mapper
public interface OrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    long countByExample(OrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    int deleteByExample(OrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    @Delete({
        "delete from T_ORDER",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    @Insert({
        "insert into T_ORDER (CREATE_TIME, UPDATE_TIME, ",
        "CUSTOMER, STATE)",
        "values (#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, ",
        "#{customer,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER})"
    })
    @SelectKey(statement="CALL IDENTITY()", keyProperty="id", before=false, resultType=Long.class)
    int insert(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    int insertSelective(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    List<Order> selectByExampleWithRowbounds(OrderExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    List<Order> selectByExample(OrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    @Select({
        "select",
        "ID, CREATE_TIME, UPDATE_TIME, CUSTOMER, STATE",
        "from T_ORDER",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("geektime.spring.springbucks.mapper.OrderMapper.BaseResultMap")
    Order selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    int updateByExampleSelective(@Param("record") Order record, @Param("example") OrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    int updateByExample(@Param("record") Order record, @Param("example") OrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    int updateByPrimaryKeySelective(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ORDER
     *
     * @mbg.generated Thu Jun 02 00:34:22 CST 2022
     */
    @Update({
        "update T_ORDER",
        "set CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},",
          "UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},",
          "CUSTOMER = #{customer,jdbcType=VARCHAR},",
          "STATE = #{state,jdbcType=INTEGER}",
        "where ID = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Order record);
}